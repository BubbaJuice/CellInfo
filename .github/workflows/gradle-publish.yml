name: Build and Publish APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Decode and setup keystore
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      run: |
        echo "${KEYSTORE_BASE64}" | base64 -di > my-release-key.keystore
        echo "Keystore created at $(pwd)/my-release-key.keystore"
        echo "KEYSTORE_PATH=$(pwd)/my-release-key.keystore" >> $GITHUB_ENV

    - name: Verify keystore file
      run: |
        ls -l $KEYSTORE_PATH
        file $KEYSTORE_PATH

    - name: Build Signed APK
      env:
        KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
        KEYSTORE_PATH: ${{ env.KEYSTORE_PATH }}
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      run: |
        echo "KEYSTORE_PATH is set to: $KEYSTORE_PATH"
        ./gradlew assembleRelease --info

    - name: List build outputs
      run: ls -R app/build/outputs/

    - name: Upload APK
      uses: actions/upload-artifact@v2
      with:
        name: app-release.apk
        path: app/build/outputs/apk/release/app-release.apk

    - name: Get version from gradle
      id: gradle_version
      run: |
        VERSION=$(./gradlew -q printVersionName)
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

    - name: Create Package Version
      id: create_version
      run: |
        response=$(curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/orgs/${{ github.repository_owner }}/packages/generic/cellinfo/${{ steps.gradle_version.outputs.VERSION }})
        echo "API Response: $response"
        upload_url=$(echo $response | jq -r '.url')
        if [ "$upload_url" = "null" ] || [ -z "$upload_url" ]; then
          echo "Error: Failed to get upload URL. API response:"
          echo "$response"
          exit 1
        fi
        echo "UPLOAD_URL=$upload_url" >> $GITHUB_OUTPUT

    - name: Upload APK to Package
      run: |
        curl -X PUT \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @app/build/outputs/apk/release/app-release.apk \
          "${{ steps.create_version.outputs.UPLOAD_URL }}/cellinfo-${{ steps.gradle_version.outputs.VERSION }}.apk"    
